"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const I=Object.getPrototypeOf(Int8Array),P=globalThis.AudioData,V=globalThis.ImageBitmap,F=globalThis.VideoFrame,q=globalThis.OffscreenCanvas,L=globalThis.RTCDataChannel,g=globalThis.MessageChannel,y=globalThis.ReadableStream,C=globalThis.WritableStream,A=globalThis.TransformStream,S="ReadableStream"in globalThis,E="WritableStream"in globalThis,w="TransformStream"in globalThis,W=S&&E&&w,m="MessageChannel"in globalThis,O="MessagePort"in globalThis,M="ArrayBuffer"in globalThis,x="AudioData"in globalThis,B="ImageBitmap"in globalThis,R="VideoFrame"in globalThis,v="OffscreenCanvas"in globalThis,D="RTCDataChannel"in globalThis,j=M&&O&&x&&B&&R&&v&&D,b="structuredClone"in globalThis,_={TransferableExists:j,StreamExists:W,ReadableStreamExists:S,WritableStreamExists:E,TransformStreamExists:w,MessageChannelExists:m,MessagePortExists:O,ArrayBufferExists:M,AudioDataExists:x,ImageBitmapExists:B,VideoFrameExists:R,OffscreenCanvasExists:v,RTCDataChannelExists:D};async function k(){async function t(){try{if(!m)return!1;const s=new g,o={port1:s.port1},i=b?structuredClone(o,{transfer:[s.port1]}):o,r=new g,n={port1:i.port1};await new Promise(e=>{r.port1.postMessage(n,[n.port1]),r.port1.onmessage=()=>{e()},r.port2.onmessage=({data:l})=>{r.port2.postMessage(l,[l.port1])}}),r.port1.close()}catch(s){return console.warn(s),!1}return!0}async function c(){try{if(!W||!m&&!b)return!1;const s={readonly:new y,writeonly:new C,tranformonly:new A},o=b?structuredClone(s,{transfer:[s.readonly,s.writeonly,s.tranformonly]}):s;if(m){const i=new g,r=o;await new Promise(n=>{i.port1.postMessage(r,[r.readonly,r.writeonly,r.tranformonly]),i.port1.onmessage=()=>{n()},i.port2.onmessage=({data:e})=>{i.port2.postMessage(e,[e.readonly,e.writeonly,e.tranformonly].filter(l=>l!==void 0))}}),i.port1.close()}}catch(s){return console.warn(s),!1}return!0}const[f,a]=await Promise.all([t(),c()]);return{channel:f,streams:a}}function h(t){return typeof t=="object"&&t!==null||typeof t=="function"}function p(t){return t instanceof I||t instanceof DataView}function u(t){return S&&t instanceof y||E&&t instanceof C||w&&t instanceof A}function d(t){return m&&t instanceof g}function T(t){return M&&t instanceof ArrayBuffer||O&&t instanceof MessagePort||x&&t instanceof P||B&&t instanceof V||R&&t instanceof F||v&&t instanceof q||D&&t instanceof L}function J(t){return Array.from(new Set(t))}function N(t,c=!1,f=1e4){const a=new Set([]),s=[[t]];for(let o=0;o<s.length;o++){const i=s[o],r=i.length;for(let n=0;n<r;n++){const e=i[n];if(p(e))a.add(e.buffer);else if(T(e)||c&&u(e))a.add(e);else if(d(e))a.add(e.port1),a.add(e.port2);else if(!u(e)&&h(e)){const l=Array.isArray(e)?e:Object.values(e);l.length&&s.push(l)}}if(--f<=0)break}return Array.from(a)}function*z(t,c=!1,f=1e4){const a=new Set([]),s=[[t]];for(let o=0;o<s.length;o++){const i=s[o],r=i.length;for(let n=0;n<r;n++){const e=i[n];if(p(e)){const{buffer:l}=e;if(a.has(l))continue;yield l,a.add(l)}else if(T(e)||c&&u(e)){if(a.has(e))continue;yield e,a.add(e)}else if(d(e)){if(a.has(e.port1)||a.has(e.port2))continue;yield e.port1,yield e.port2,a.add(e.port1),a.add(e.port2)}else if(!u(e)&&h(e)){const l=Array.isArray(e)?e:Object.values(e);l.length&&s.push(l)}}if(--f<=0)break}return null}function G(t,c=!1,f=1e4){const a=[[t]];for(let s=0;s<a.length;s++){const o=a[s],i=o.length;for(let r=0;r<i;r++){const n=o[r];if(p(n))return!0;if(T(n)||c&&u(n))return!0;if(d(n))return!0;if(!u(n)&&h(n)){const e=Array.isArray(n)?n:Object.values(n);e.length&&a.push(e)}}if(--f<=0)break}return!1}exports.AVAILABLE_TRANSFERABLE_OBJECTS=_;exports.AudioData=P;exports.ImageBitmap=V;exports.MessageChannel=g;exports.OffscreenCanvas=q;exports.RTCDataChannel=L;exports.ReadableStream=y;exports.TransformStream=A;exports.TypedArray=I;exports.VideoFrame=F;exports.WritableStream=C;exports.filterOutDuplicates=J;exports.getTransferable=z;exports.getTransferables=N;exports.hasTransferables=G;exports.isMessageChannel=d;exports.isObject=h;exports.isStream=u;exports.isSupported=k;exports.isTransferable=T;exports.isTypedArray=p;
