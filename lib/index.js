(function(r,g){typeof exports=="object"&&typeof module<"u"?g(exports):typeof define=="function"&&define.amd?define(["exports"],g):(r=typeof globalThis<"u"?globalThis:r||self,g(r.Transferables={}))})(this,function(r){"use strict";const g=Object.getPrototypeOf(Int8Array),w=globalThis.AudioData,E=globalThis.VideoFrame,O=globalThis.OffscreenCanvas,M=globalThis.RTCDataChannel,p="ReadableStream"in globalThis,C="WritableStream"in globalThis,A="TransformStream"in globalThis,h="MessageChannel"in globalThis,v="MessagePort"in globalThis,D="ArrayBuffer"in globalThis,R="AudioData"in globalThis,B="ImageBitmap"in globalThis,P="VideoFrame"in globalThis,V="OffscreenCanvas"in globalThis,F="RTCDataChannel"in globalThis,S="structuredClone"in globalThis,q={ReadableStreamExists:p,WritableStreamExists:C,TransformStreamExists:A,MessageChannelExists:h,MessagePortExists:v,ArrayBufferExists:D,AudioDataExists:R,ImageBitmapExists:B,VideoFrameExists:P,OffscreenCanvasExists:V,RTCDataChannelExists:F};async function I(){async function n(){try{if(!h)return!1;const s=new MessageChannel,i={port1:s.port1},l=S?structuredClone(i,{transfer:[s.port1]}):i,o=new MessageChannel,a={port1:l.port1};await new Promise(e=>{o.port1.postMessage(a,[a.port1]),o.port1.onmessage=()=>{e()},o.port2.onmessage=({data:f})=>{o.port2.postMessage(f,[f.port1])}}),o.port1.close()}catch(s){return console.warn(s),!1}return!0}async function u(){try{if(!p||!C||!A||!h&&!S)return!1;const s={readonly:new ReadableStream,writeonly:new WritableStream,tranformonly:new TransformStream},i=S?structuredClone(s,{transfer:[s.readonly,s.writeonly,s.tranformonly]}):s;if(h){const l=new MessageChannel,o=i;await new Promise(a=>{l.port1.postMessage(o,[o.readonly,o.writeonly,o.tranformonly]),l.port1.onmessage=()=>{a()},l.port2.onmessage=({data:e})=>{l.port2.postMessage(e,[e.readonly,e.writeonly,e.tranformonly].filter(f=>f!==void 0))}}),l.port1.close()}}catch(s){return console.warn(s),!1}return!0}const[d,t]=await Promise.all([n(),u()]);return{channel:d,streams:t}}function m(n){return typeof n=="object"&&n!==null||typeof n=="function"}function y(n){return n instanceof g||n instanceof DataView}function c(n){return p&&n instanceof ReadableStream||C&&n instanceof WritableStream||A&&n instanceof TransformStream}function T(n){return h&&n instanceof MessageChannel}function b(n){return D&&n instanceof ArrayBuffer||v&&n instanceof MessagePort||R&&n instanceof w||B&&n instanceof ImageBitmap||P&&n instanceof E||V&&n instanceof O||F&&n instanceof M}function L(n){return Array.from(new Set(n))}function j(n,u=!1,d=1e4){const t=new Set([]),s=[[n]];for(let i=0;i<s.length;i++){const l=s[i],o=l.length;for(let a=0;a<o;a++){const e=l[a];if(y(e))t.add(e.buffer);else if(b(e))t.add(e);else if(T(e))t.add(e.port1),t.add(e.port2);else if(u&&c(e))t.add(e);else if(!c(e)&&m(e)){const f=Array.isArray(e)?e:Object.values(e);f.length&&s.push(f)}}if(--d<=0)break}return Array.from(t)}function*W(n,u=!1,d=1e4){const t=new Set([]),s=[[n]];for(let i=0;i<s.length;i++){const l=s[i],o=l.length;for(let a=0;a<o;a++){const e=l[a];if(!t.has(e)){if(y(e)){t.add(e);const{buffer:f}=e;if(t.has(f))continue;yield f,t.add(f)}else if(b(e))yield e,t.add(e);else if(T(e)){if(t.add(e),t.has(e.port1)||t.has(e.port2))continue;yield e.port1,yield e.port2,t.add(e.port1),t.add(e.port2)}else if(u&&c(e))yield e,t.add(e);else if(!c(e)&&m(e)){const f=Array.isArray(e)?e:Object.values(e);f.length&&s.push(f)}}}if(--d<=0)break}return null}function _(n,u=!1,d=1e4){const t=[[n]];for(let s=0;s<t.length;s++){const i=t[s],l=i.length;for(let o=0;o<l;o++){const a=i[o];if(y(a))return!0;if(b(a))return!0;if(T(a))return!0;if(u&&c(a))return!0;if(!c(a)&&m(a)){const e=Array.isArray(a)?a:Object.values(a);e.length&&t.push(e)}}if(--d<=0)break}return!1}r.AVAILABLE_TRANSFERABLE_OBJECTS=q,r.AudioData=w,r.OffscreenCanvas=O,r.RTCDataChannel=M,r.TypedArray=g,r.VideoFrame=E,r.filterOutDuplicates=L,r.getTransferable=W,r.getTransferables=j,r.hasTransferables=_,r.isMessageChannel=T,r.isObject=m,r.isStream=c,r.isSupported=I,r.isTransferable=b,r.isTypedArray=y,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});
