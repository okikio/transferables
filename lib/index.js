(function(t,m){typeof exports=="object"&&typeof module<"u"?m(exports):typeof define=="function"&&define.amd?define(["exports"],m):(t=typeof globalThis<"u"?globalThis:t||self,m(t.Transferables={}))})(this,function(t){"use strict";const m=Object.getPrototypeOf(Int8Array),F=globalThis.AudioData,j=globalThis.ImageBitmap,q=globalThis.VideoFrame,L=globalThis.OffscreenCanvas,W=globalThis.RTCDataChannel,h=globalThis.MessageChannel,A=globalThis.ReadableStream,C=globalThis.WritableStream,S=globalThis.TransformStream,E="ReadableStream"in globalThis,w="WritableStream"in globalThis,O="TransformStream"in globalThis,_=E&&w&&O,d="MessageChannel"in globalThis,B="MessagePort"in globalThis,M="ArrayBuffer"in globalThis,R="AudioData"in globalThis,v="ImageBitmap"in globalThis,D="VideoFrame"in globalThis,I="OffscreenCanvas"in globalThis,P="RTCDataChannel"in globalThis,k=M&&B&&R&&v&&D&&I&&P,V="structuredClone"in globalThis,J={TransferableExists:k,StreamExists:_,ReadableStreamExists:E,WritableStreamExists:w,TransformStreamExists:O,MessageChannelExists:d,MessagePortExists:B,ArrayBufferExists:M,AudioDataExists:R,ImageBitmapExists:v,VideoFrameExists:D,OffscreenCanvasExists:I,RTCDataChannelExists:P};async function N(){async function n(){try{if(!d)return!1;const s=new h,i={port1:s.port1},l=V?structuredClone(i,{transfer:[s.port1]}):i,o=new h,a={port1:l.port1};await new Promise(e=>{o.port1.postMessage(a,[a.port1]),o.port1.onmessage=()=>{e()},o.port2.onmessage=({data:f})=>{o.port2.postMessage(f,[f.port1])}}),o.port1.close()}catch(s){return console.warn(s),!1}return!0}async function u(){try{if(!_||!d&&!V)return!1;const s={readonly:new A,writeonly:new C,tranformonly:new S},i=V?structuredClone(s,{transfer:[s.readonly,s.writeonly,s.tranformonly]}):s;if(d){const l=new h,o=i;await new Promise(a=>{l.port1.postMessage(o,[o.readonly,o.writeonly,o.tranformonly]),l.port1.onmessage=()=>{a()},l.port2.onmessage=({data:e})=>{l.port2.postMessage(e,[e.readonly,e.writeonly,e.tranformonly].filter(f=>f!==void 0))}}),l.port1.close()}}catch(s){return console.warn(s),!1}return!0}const[g,r]=await Promise.all([n(),u()]);return{channel:g,streams:r}}function T(n){return typeof n=="object"&&n!==null||typeof n=="function"}function b(n){return ArrayBuffer.isView(n)}function c(n){return E&&n instanceof A||w&&n instanceof C||O&&n instanceof S}function y(n){return d&&n instanceof h}function p(n){return M&&n instanceof ArrayBuffer||B&&n instanceof MessagePort||R&&n instanceof F||v&&n instanceof j||D&&n instanceof q||I&&n instanceof L||P&&n instanceof W}function z(n){return Array.from(new Set(n))}function G(n,u=!1,g=1e4){const r=new Set([]),s=[[n]];for(let i=0;i<s.length;i++){const l=s[i],o=l.length;for(let a=0;a<o;a++){const e=l[a];if(b(e))r.add(e.buffer);else if(p(e)||u&&c(e))r.add(e);else if(y(e))r.add(e.port1),r.add(e.port2);else if(!c(e)&&T(e)){const f=Array.isArray(e)?e:Object.values(e);f.length&&s.push(f)}}if(--g<=0)break}return Array.from(r)}function*H(n,u=!1,g=1e4){const r=new Set([]),s=[[n]];for(let i=0;i<s.length;i++){const l=s[i],o=l.length;for(let a=0;a<o;a++){const e=l[a];if(b(e)){const{buffer:f}=e;if(r.has(f))continue;yield f,r.add(f)}else if(p(e)||u&&c(e)){if(r.has(e))continue;yield e,r.add(e)}else if(y(e)){if(r.has(e.port1)||r.has(e.port2))continue;yield e.port1,yield e.port2,r.add(e.port1),r.add(e.port2)}else if(!c(e)&&T(e)){const f=Array.isArray(e)?e:Object.values(e);f.length&&s.push(f)}}if(--g<=0)break}return null}function K(n,u=!1,g=1e4){const r=[[n]];for(let s=0;s<r.length;s++){const i=r[s],l=i.length;for(let o=0;o<l;o++){const a=i[o];if(b(a))return!0;if(p(a)||u&&c(a))return!0;if(y(a))return!0;if(!c(a)&&T(a)){const e=Array.isArray(a)?a:Object.values(a);e.length&&r.push(e)}}if(--g<=0)break}return!1}t.AVAILABLE_TRANSFERABLE_OBJECTS=J,t.AudioData=F,t.ImageBitmap=j,t.MessageChannel=h,t.OffscreenCanvas=L,t.RTCDataChannel=W,t.ReadableStream=A,t.TransformStream=S,t.TypedArray=m,t.VideoFrame=q,t.WritableStream=C,t.filterOutDuplicates=z,t.getTransferable=H,t.getTransferables=G,t.hasTransferables=K,t.isMessageChannel=y,t.isObject=T,t.isStream=c,t.isSupported=N,t.isTransferable=p,t.isTypedArray=b,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});
